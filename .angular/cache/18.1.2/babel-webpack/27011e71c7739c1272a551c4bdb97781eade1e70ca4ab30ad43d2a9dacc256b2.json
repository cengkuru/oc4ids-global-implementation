{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { unwrapUrlOrSanitize } from '../../builders/url_builders.js';\nimport { isResourceUrl, unwrapResourceUrl } from '../../internals/resource_url_impl.js';\nconst SAFE_URL_REL_VALUES = ['alternate', 'author', 'bookmark', 'canonical', 'cite', 'help', 'icon', 'license', 'modulepreload', 'next', 'prefetch', 'dns-prefetch', 'prerender', 'preconnect', 'preload', 'prev', 'search', 'subresource'];\nexport function setHrefAndRel(link, url, rel) {\n  if (isResourceUrl(url)) {\n    setHrefAndRelWithTrustedResourceUrl(link, url, rel);\n    return;\n  } else {\n    if (SAFE_URL_REL_VALUES.indexOf(rel) === -1) {\n      throw new Error(`TrustedResourceUrl href attribute required with rel=\"${rel}\"`);\n    }\n    const sanitizedUrl = unwrapUrlOrSanitize(url);\n    if (sanitizedUrl === undefined) {\n      return;\n    }\n    link.href = sanitizedUrl;\n  }\n  link.rel = rel;\n}\n/**\n * Safely sets a link element's \"href\" property using a TrustedResourceUrl and\n * an arbitrary \"rel\" value. It is recommended to use this method when the url\n * is always a TrustedResourceUrl, since the resulting binary size will be\n * smaller.\n */\nexport function setHrefAndRelWithTrustedResourceUrl(link, url, rel) {\n  link.href = unwrapResourceUrl(url).toString();\n  link.rel = rel;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}