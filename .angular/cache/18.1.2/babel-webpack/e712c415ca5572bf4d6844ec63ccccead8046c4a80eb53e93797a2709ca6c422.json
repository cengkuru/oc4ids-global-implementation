{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Library that provides safe getters for different node properties and\n * checks for clobbering.\n */\n/** Gets a reasonable nodeName, even for clobbered nodes. */\nexport function getNodeName(node) {\n  const nodeName = node.nodeName;\n  // If the property is clobbered, assume it is an `HTMLFormElement`.\n  return typeof nodeName === 'string' ? nodeName : 'FORM';\n}\n/** Returns true if the object passed is a Text node. */\nexport function isText(node) {\n  // The property cannot get clobbered on Text nodes.\n  return node.nodeType === 3; // Node.TEXT_NODE\n}\n/** Returns true if the object passed is an Element node. */\nexport function isElement(node) {\n  const nodeType = node.nodeType;\n  // If the property is clobbered, we can assume it is an `HTMLFormElement`, and\n  // thus an `Element`.\n  return nodeType === 1 /* Node.ELEMENT_NODE */ || typeof nodeType !== 'number';\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}