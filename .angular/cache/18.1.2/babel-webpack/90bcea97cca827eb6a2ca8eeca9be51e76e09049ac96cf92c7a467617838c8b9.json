{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../../environment/dev.js';\nimport { createHtmlInternal, unwrapHtml } from '../../internals/html_impl.js';\n/** Safely parses a string using the HTML parser. */\nexport function parseHtml(parser, html) {\n  return parseFromString(parser, html, 'text/html');\n}\n/**\n * Safely parses a string using the XML parser. If the XML document is found to\n * contain any elements from the HTML or SVG namespaces, an error is thrown for\n * security reasons.\n */\nexport function parseXml(parser, xml) {\n  const doc = parseFromString(parser, createHtmlInternal(xml), 'text/xml');\n  const iterator = document.createNodeIterator(doc, NodeFilter.SHOW_ALL);\n  let currentNode;\n  while (currentNode = iterator.nextNode()) {\n    if (currentNode instanceof HTMLElement || currentNode instanceof SVGElement) {\n      let message = 'unsafe XML';\n      if (process.env.NODE_ENV !== 'production') {\n        message = `attempted to parse an XML document that embeds HTML or SVG content`;\n      }\n      throw new Error(message);\n    }\n  }\n  return doc;\n}\n/** Safely parses a string using the HTML or XML parser. */\nexport function parseFromString(parser, content, contentType) {\n  return parser.parseFromString(unwrapHtml(content), contentType);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}