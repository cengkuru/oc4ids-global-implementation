{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev.js';\nimport { ensureTokenIsValid, secretToken } from './secrets.js';\n/**\n * A complete CSS style sheet, safe to use in style contexts in an HTML document\n * or DOM APIs.\n */\nexport class SafeStyleSheet {}\n/** Implementation for `SafeStyleSheet` */\nclass StyleSheetImpl extends SafeStyleSheet {\n  constructor(styleSheet, token) {\n    super();\n    ensureTokenIsValid(token);\n    this.privateDoNotAccessOrElseWrappedStyleSheet = styleSheet;\n  }\n  toString() {\n    return this.privateDoNotAccessOrElseWrappedStyleSheet;\n  }\n}\n/**\n * Builds a new `SafeStyleSheet` from the given string, without enforcing\n * safety guarantees. This shouldn't be exposed to application developers, and\n * must only be used as a step towards safe builders or safe constants.\n */\nexport function createStyleSheetInternal(styleSheet) {\n  return new StyleSheetImpl(styleSheet, secretToken);\n}\n/**\n * Checks if the given value is a `SafeStyleSheet` instance.\n */\nexport function isStyleSheet(value) {\n  return value instanceof StyleSheetImpl;\n}\n/**\n * Returns the string value of the passed `SafeStyleSheet` object while\n * ensuring it has the correct type.\n */\nexport function unwrapStyleSheet(value) {\n  if (value instanceof StyleSheetImpl) {\n    return value.privateDoNotAccessOrElseWrappedStyleSheet;\n  } else {\n    let message = '';\n    if (process.env.NODE_ENV !== 'production') {\n      message = 'Unexpected type when unwrapping SafeStyleSheet';\n    }\n    throw new Error(message);\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}